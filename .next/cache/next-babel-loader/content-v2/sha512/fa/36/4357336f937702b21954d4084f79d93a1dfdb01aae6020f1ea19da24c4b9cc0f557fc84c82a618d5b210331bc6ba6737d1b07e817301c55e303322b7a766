{"ast":null,"code":"//import recipes from \"../data/recipes.json\"\nimport { fetchRecipe, fetchRecipes } from \"../api/api.js\"; // type宣言\n\nexport async function getRecipes() {\n  return fetchRecipes;\n}\nexport async function getRecipe(id) {\n  return fetchRecipe.find(recipe => recipe.id === id) || null;\n}\n/*\nimport recipes from \"../data/recipes.json\";\nexport type Recipe = {\nid: number;\nname: string;\ndescription: string;\nimageUrl: string | null;\nsteps: string[];\ningredients: {\n  name: string;\n  quantity: string;\n}[];\n};\nexport async function getRecipes(): Promise<Recipe[]> {\nreturn recipes as Recipe[];\n}\nexport async function getRecipe(id: number): Promise<Recipe | null> {\nreturn (recipes as Recipe[]).find((recipe) => recipe.id === id) || null;\n}\n*/","map":{"version":3,"sources":["/Users/chihiro-t/cookpad/project/spring-internship-2021-recipe-site/lib/recipe.ts"],"names":["fetchRecipe","fetchRecipes","getRecipes","getRecipe","id","find","recipe"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C,C,CAEA;;AAsCE,OAAO,eAAeC,UAAf,GAA+C;AACpD,SAAOD,YAAP;AACD;AAED,OAAO,eAAeE,SAAf,CAAyBC,EAAzB,EAA6D;AAClE,SAAQJ,WAAD,CAA0BK,IAA1B,CAAgCC,MAAD,IAAYA,MAAM,CAACF,EAAP,KAAcA,EAAzD,KAAgE,IAAvE;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//import recipes from \"../data/recipes.json\"\nimport { fetchRecipe, fetchRecipes } from \"../api/api.js\"\n\n// type宣言\nexport type Recipe = {\n    // レシピID\n    id: number;\n  \n    // レシピ名\n    title: string;\n  \n    // レシピ概要\n    description: string;\n  \n    // レシピ画像。画像がない場合は null。\n    image_url: string | null;\n  \n    // レシピ作者\n    author: {\n      user_name: string;\n    };\n  \n    // レシピを公開した日時。ISO 8601\n    published_at: string;\n  \n    // レシピの手順\n    steps: string[];\n  \n    // レシピの材料\n    ingredients: {\n      // 材料名\n      name: string;\n      // 分量（100g など）\n      quantity: string;\n    }[];\n  \n    // 関連するレシピのIDが最大5つ入っている。Poster View などを実装するのに使う。\n    // なお、関連レシピの算出アルゴリズムのできが悪いため関連性が低い可能性がある点に注意。\n    related_recipes: number[];\n  };\n  \n  export async function getRecipes(): Promise<Recipe[]> {\n    return fetchRecipes as Recipe[];\n  }\n\n  export async function getRecipe(id: number): Promise<Recipe | null> {\n    return (fetchRecipe as Recipe[]).find((recipe) => recipe.id === id) || null;\n  }\n\n  /*\n  import recipes from \"../data/recipes.json\";\n\nexport type Recipe = {\n  id: number;\n  name: string;\n  description: string;\n  imageUrl: string | null;\n  steps: string[];\n  ingredients: {\n    name: string;\n    quantity: string;\n  }[];\n};\n\nexport async function getRecipes(): Promise<Recipe[]> {\n  return recipes as Recipe[];\n}\n\nexport async function getRecipe(id: number): Promise<Recipe | null> {\n  return (recipes as Recipe[]).find((recipe) => recipe.id === id) || null;\n}\n*/"]},"metadata":{},"sourceType":"module"}