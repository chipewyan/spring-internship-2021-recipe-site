{"ast":null,"code":"// 一個だけ取得\n\n/*\ntype FetchRecipe = Recipe;\n\ntypeof で対応できている？\n*/\nexport async function fetchRecipe(id) {\n  const res = await fetch(`https://internship-recipe-api.ckpd.co/recipes/${id}`, {\n    headers: {\n      'X-Api-Key': process.env.APIKEY\n    }\n  });\n  const recipe = await res.json();\n  return recipe;\n} // 全部取得\n\n/*\ntype FetchRecipes = {\n    recipes: Recipe[];\n  };\n\ntypeof で対応できている？\n */\n\nexport async function fetchRecipes(page, id) {\n  const qs = new URLSearchParams(removeUndefineds({\n    page,\n    id\n  })).toString();\n  const res = await fetch(`https://internship-recipe-api.ckpd.co/recipes?${qs}`, {\n    headers: {\n      \"X-Api-Key\": process.env.APIKEY\n    }\n  });\n  const recipes = await res.json(); // unknown とか挿入必要？\n\n  return recipes;\n}\n\nfunction removeUndefineds(obj) {\n  const newObj = {};\n  Object.keys(obj).forEach(key => {\n    if (obj[key] !== undefined) {\n      newObj[key] = obj[key].toString(); // TODO: KUSO CASTING HERE\n    }\n  });\n  return newObj;\n} // API取得\n\n/*\n(async() => {\n    const res = await fetch('https://internship-recipe-api.ckpd.co/recipes', {\n      headers: { 'X-Api-Key':process.env.APIKEY }\n    });\n    const recipes = await res.json();\n    console.log(recipes);\n  })();\n*/","map":{"version":3,"sources":["/Users/chihiro-t/cookpad/project/spring-internship-2021-recipe-site/api/api.ts"],"names":["fetchRecipe","id","res","fetch","headers","process","env","APIKEY","recipe","json","fetchRecipes","page","qs","URLSearchParams","removeUndefineds","toString","recipes","obj","newObj","Object","keys","forEach","key","undefined"],"mappings":"AAEA;;AAEA;AACA;AACA;AACA;AACA;AAEA,OAAO,eAAeA,WAAf,CAA2BC,EAA3B,EAAkE;AACrE,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,iDAAgDF,EAAG,EAArD,EACvB;AACIG,IAAAA,OAAO,EAAE;AAAE,mBAAYC,OAAO,CAACC,GAAR,CAAYC;AAA1B;AADb,GADuB,CAAvB;AAIA,QAAMC,MAAM,GAAK,MAAMN,GAAG,CAACO,IAAJ,EAAvB;AACA,SAAOD,MAAP;AACH,C,CAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,OAAO,eAAeE,YAAf,CACLC,IADK,EAELV,EAFK,EAGuB;AAC5B,QAAMW,EAAE,GAAG,IAAIC,eAAJ,CACTC,gBAAgB,CAAC;AACfH,IAAAA,IADe;AAEfV,IAAAA;AAFe,GAAD,CADP,EAKTc,QALS,EAAX;AAMA,QAAMb,GAAG,GAAG,MAAMC,KAAK,CACpB,iDAAgDS,EAAG,EAD/B,EAErB;AACER,IAAAA,OAAO,EAAE;AAAE,mBAAYC,OAAO,CAACC,GAAR,CAAYC;AAA1B;AADX,GAFqB,CAAvB;AAMA,QAAMS,OAAO,GAAK,MAAMd,GAAG,CAACO,IAAJ,EAAxB,CAb4B,CAa2C;;AACvE,SAAOO,OAAP;AACD;;AAED,SAASF,gBAAT,CACEG,GADF,EAE0B;AACxB,QAAMC,MAAM,GAAG,EAAf;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,OAAjB,CAA0BC,GAAD,IAAS;AAChC,QAAIL,GAAG,CAACK,GAAD,CAAH,KAAaC,SAAjB,EAA4B;AAC1BL,MAAAA,MAAM,CAACI,GAAD,CAAN,GAAcL,GAAG,CAACK,GAAD,CAAH,CAASP,QAAT,EAAd,CAD0B,CACS;AACpC;AACF,GAJD;AAKA,SAAOG,MAAP;AACD,C,CAEH;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { getRecipes, getRecipe } from \"../lib/recipe\";\n\n// 一個だけ取得\n\n/*\ntype FetchRecipe = Recipe;\n\ntypeof で対応できている？\n*/\n\nexport async function fetchRecipe(id: number): Promise<typeof getRecipe> {\n    const res = await fetch(`https://internship-recipe-api.ckpd.co/recipes/${id}`,\n    {\n        headers: { 'X-Api-Key':process.env.APIKEY },\n    });\n    const recipe = ((await res.json()) as unknown) as typeof getRecipe;\n    return recipe;\n}\n\n// 全部取得\n\n/*\ntype FetchRecipes = {\n    recipes: Recipe[];\n  };\n\ntypeof で対応できている？\n */\n  \n  export async function fetchRecipes(\n    page?: number,\n    id?: number[]\n  ): Promise<typeof getRecipes> {\n    const qs = new URLSearchParams(\n      removeUndefineds({\n        page,\n        id,\n      })\n    ).toString();\n    const res = await fetch(\n      `https://internship-recipe-api.ckpd.co/recipes?${qs}`,\n      {\n        headers: { \"X-Api-Key\":process.env.APIKEY },\n      }\n    );\n    const recipes = ((await res.json()) as unknown) as typeof getRecipes ; // unknown とか挿入必要？\n    return recipes;\n  }\n  \n  function removeUndefineds(\n    obj: Record<string, unknown>\n  ): Record<string, string> {\n    const newObj = {};\n    Object.keys(obj).forEach((key) => {\n      if (obj[key] !== undefined) {\n        newObj[key] = obj[key].toString(); // TODO: KUSO CASTING HERE\n      }\n    });\n    return newObj;\n  }\n\n// API取得\n/*\n(async() => {\n    const res = await fetch('https://internship-recipe-api.ckpd.co/recipes', {\n      headers: { 'X-Api-Key':process.env.APIKEY }\n    });\n    const recipes = await res.json();\n    console.log(recipes);\n  })();\n*/"]},"metadata":{},"sourceType":"module"}