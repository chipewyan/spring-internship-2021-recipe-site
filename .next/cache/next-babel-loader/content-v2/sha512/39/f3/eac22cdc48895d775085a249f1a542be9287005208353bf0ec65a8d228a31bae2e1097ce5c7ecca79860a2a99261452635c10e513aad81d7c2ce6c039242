{"ast":null,"code":"var _jsxFileName = \"/Users/chihiro-t/cookpad/project/spring-internship-2021-recipe-site/pages/recipes/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout } from \"../../components/Layout\";\nimport { fetchRecipe } from \"../../api/api\";\nexport const getServerSideProps = async context => {\n  const recipeId = Number(context.query.id);\n  const recipe = await fetchRecipe(recipeId);\n  return {\n    props: {\n      recipe\n    }\n  };\n};\n\nconst RecipePage = ({\n  recipe\n}) => {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, recipe.title), __jsx(\"img\", {\n    src: recipe.image_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"\\u4F5C\\u8005: \", recipe.author.user_name), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"\\u6295\\u7A3F\\u65E5\\u6642: \", recipe.published_at), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"\\u8AAC\\u660E: \", recipe.description)), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"\\u6750\\u6599\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, recipe.ingredients.map(ingredient => __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 55\n    }\n  }, ingredient.name, \" (\", ingredient.quantity, \")\"))), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"\\u624B\\u9806\"), __jsx(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, recipe.steps.map(step => __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 43\n    }\n  }, step))));\n};\n/*\nreturn (\n    <div>\n      <h1>My Recipe Site</h1>\n\n      {recipe && (\n        <main>\n          <h2>{recipe.title}</h2>\n\n          {recipe.image_url && (\n            <img src={recipe.image_url} alt=\"レシピ画像\" width=\"300\" />\n          )}\n\n          <p>{recipe.description}</p>\n\n          <h3>材料</h3>\n          <ol>\n            {recipe.ingredients.map((ing, i) => (\n              <li key={i}>\n                {ing.name} : {ing.quantity}\n              </li>\n            ))}\n          </ol>\n\n          <h3>手順</h3>\n          <ol>\n            {recipe.steps.map((step, i) => (\n              <li key={i}>{step}</li>\n            ))}\n          </ol>\n        </main>\n      )}\n    </div>\n  );\n};\n*/\n\n\nexport default RecipePage;","map":{"version":3,"sources":["/Users/chihiro-t/cookpad/project/spring-internship-2021-recipe-site/pages/recipes/[id].tsx"],"names":["Layout","fetchRecipe","getServerSideProps","context","recipeId","Number","query","id","recipe","props","RecipePage","title","image_url","author","user_name","published_at","description","ingredients","map","ingredient","name","quantity","steps","step"],"mappings":";;;AAEA,SAASA,MAAT,QAAuB,yBAAvB;AAGA,SAASC,WAAT,QAA4B,eAA5B;AAMA,OAAO,MAAMC,kBAA6C,GAAG,MAAOC,OAAP,IAAmB;AAC5E,QAAMC,QAAQ,GAAGC,MAAM,CAACF,OAAO,CAACG,KAAR,CAAcC,EAAf,CAAvB;AACA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACG,QAAD,CAAhC;AACA,SAAO;AACHK,IAAAA,KAAK,EAAE;AACHD,MAAAA;AADG;AADJ,GAAP;AAKH,CARM;;AAUP,MAAME,UAA2B,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAgB;AAChD,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,MAAM,CAACG,KAAZ,CADJ,EAEI;AAAK,IAAA,GAAG,EAAEH,MAAM,CAACI,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAASJ,MAAM,CAACK,MAAP,CAAcC,SAAvB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAWN,MAAM,CAACO,YAAlB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAASP,MAAM,CAACQ,WAAhB,CAHJ,CAJJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,MAAM,CAACS,WAAP,CAAmBC,GAAnB,CAAuBC,UAAU,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,UAAU,CAACC,IAAhB,QAAwBD,UAAU,CAACE,QAAnC,MAArC,CADL,CAXJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,MAAM,CAACc,KAAP,CAAaJ,GAAb,CAAiBK,IAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CAAzB,CADL,CAhBJ,CADJ;AAsBH,CAvBD;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeb,UAAf","sourcesContent":["import { GetServerSideProps, NextPage } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { Layout } from \"../../components/Layout\"\n\nimport { Recipe } from \"../../lib/recipe\";\nimport { fetchRecipe } from \"../../api/api\"\n\ntype Props = {\n  recipe: Recipe;\n};\n\nexport const getServerSideProps: GetServerSideProps<Props> = async (context) => {\n    const recipeId = Number(context.query.id);\n    const recipe = await fetchRecipe(recipeId);\n    return {\n        props: {\n            recipe,\n        }\n    }\n}\n\nconst RecipePage: NextPage<Props> = ({ recipe }) => {\n    return (\n        <Layout>\n            <h1>{recipe.title}</h1>\n            <img src={recipe.image_url} />\n            <hr />\n            <ul>\n                <li>作者: {recipe.author.user_name}</li>\n                <li>投稿日時: {recipe.published_at}</li>\n                <li>説明: {recipe.description}</li>\n            </ul>\n            <hr />\n            <h2>材料</h2>\n            <ul>\n                {recipe.ingredients.map(ingredient => <li>{ingredient.name} ({ingredient.quantity})</li>)}\n            </ul>\n            <hr />\n            <h2>手順</h2>\n            <ol>\n                {recipe.steps.map(step => <li>{step}</li>)}\n            </ol>\n        </Layout>\n    )\n}\n\n/*\nreturn (\n    <div>\n      <h1>My Recipe Site</h1>\n\n      {recipe && (\n        <main>\n          <h2>{recipe.title}</h2>\n\n          {recipe.image_url && (\n            <img src={recipe.image_url} alt=\"レシピ画像\" width=\"300\" />\n          )}\n\n          <p>{recipe.description}</p>\n\n          <h3>材料</h3>\n          <ol>\n            {recipe.ingredients.map((ing, i) => (\n              <li key={i}>\n                {ing.name} : {ing.quantity}\n              </li>\n            ))}\n          </ol>\n\n          <h3>手順</h3>\n          <ol>\n            {recipe.steps.map((step, i) => (\n              <li key={i}>{step}</li>\n            ))}\n          </ol>\n        </main>\n      )}\n    </div>\n  );\n};\n*/\n\nexport default RecipePage;"]},"metadata":{},"sourceType":"module"}